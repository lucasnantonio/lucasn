{"version":3,"sources":["assets/css/_settings.styl","assets/css/style.styl","node_modules/rupture/rupture/index.styl","node_modules/jeet/stylus/jeet/_grid.styl","node_modules/axis/axis/utilities.styl"],"names":[],"mappings":"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","sourcesContent":["// ---------------\n// Axis Settings\n// Check here for updates:\n// https://github.com/jenius/axis/blob/master/axis/settings.styl\n// ---------------\n\n// Font stacks (add your own!)\n$helvetica-neue = \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif\n$helvetica = \"Helvetica Neue\", Helvetica, Arial, sans-serif\n$georgia = Georgia, Cambria, \"Times New Roman\", Times, serif\n$lucidia-grande = \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif\n$monospace = unquote(\"'Bitstream Vera Sans Mono', Consolas, Courier, monospace\")\n$verdana = Verdana, Geneva, sans-serif\n\n@font-face {\nfont-family: Avenir;\nsrc: url(\"../fonts/AvenirNextLTPro-Regular.otf\") format(\"opentype\");\n}\n\n@font-face {\nfont-family: Avenir-bold;\nfont-weight: bold;\nsrc: url(\"../fonts/AvenirNextLTPro-Demi.otf\") format(\"opentype\");\n}\n\n// Default font settings\n$font-stack = $helvetica-neue\n$font-size = 16\n$font-color = #555\n\n// Colors (via http://clrs.cc - slightly modded)\n$navy     = #001F3F\n$blue     = #0074D9\n$aqua     = #7FDBFF\n$teal     = #39CCCC\n$olive    = #3D9970\n$green    = #2ECC40\n$lime     = #01FF70\n$yellow   = #FFDC00\n$orange   = #FF851B\n$red      = #D13F19\n$maroon   = #85144B\n$fuchsia  = #F012BE\n$purple   = #B10DC9\n$white    = #FFFFFF\n$silver   = #DDDDDD\n$gray     = #AAAAAA\n$black    = #222222\n\n\n\n// Use as default HTML colors\nnavy    = $navy\nblue    = $blue\naqua    = $aqua\nteal    = rteal\nolive   = $olive\ngreen   = $green\nlime    = $lime\nyellow  = $yellow\norange  = $orange\nred     = $red\nmaroon  = $maroon\nfuchsia = $fuchsia\npurple  = $purple\nwhite   = $white\nsilver  = $silver\ngray    = $gray\nblack   = $black\n\n// Default color\n$default-color = $blue\n\n// Text highlight color\n$highlight-color = $blue\n\n// Custom image base path for axis mixins\n$img-path = '/img/'\n\n// Ligatures\n$ligatures = false","@import '_settings'\n@import 'jeet' \n// edit()\n\ngreen = #7DB144\ndribbble = #EA4C89\nlinkedin = #0976B4\nemail = green\nbehance = #1769FF\ntwitter = #55ACEE\nsocial-grey = black\n\nhtml\n\t\n\tfont-size 16\n\t+below(40em)\n\t\tfont-size 20\n\t+above(1800px)\n\t\tfont-size 22\nbody\n\ttext-align center\n\tfont-family 'Avenir', sans\n\tfont-weight lighter\n\tline-height 1.8em\n\tmargin 0px\n\t*\n\t\tbackground-size cover\n\t\tbackground-repeat no-repeat\n\t\n\th1, h2\n\t\tfont-size 1em\n\t\tline-height 3em\n\t\tmargin-top 3em\n\t\tmargin-bottom 0px\n\ta \n\t\tfont-weight: bold\n\t\tcolor black\n\t\ttext-decoration none\n\t\tfont-style normal\n\t\ttext-decoration underline\n\t\t&:hover\n\t\t\tcursor pointer !important\n\t\t\n\timg\n\t\tmax-width 100%\n\n\t\t\n.home-wrapper\n\tpadding-top 5em\n\tcenter(36em)\n\t+below(36em)\n\t\tcenter(80%)\n\t\n\n.lucas-profile\n\timg\n\t\twidth 5em\n\t\n.shown\n\tcenter(20em)\n\tmargin-bottom 3em\n\n\tp\n\t\tmargin-bottom 1.5em\n\t\tmargin-top 0px\n\t+below(40em)\n\t\tcenter(90%)\t\n.hidden\n\theight 0px\n\toverflow hidden \t\n\t\n.skilllist\n\tmargin-top 3em\n\tcol(1/3, gutter:3)\n\tfont-size .8em\n\ttext-align left\n\tul\n\t\tpadding-left 0px\n\tli\n\t\tlist-style-type none\n\th3\n\t\tfont-weight bold\n\t\t\n\t+below(40em)\n\t\tstack()\t\n\t\ttext-align center\n\t\tfont-size 1em\n\t\t\n.button\n\tmargin-top 3em\n\tmargin-bottom 3em\n\ta\t\n\t\theight 3em\n\t\tcolor white\n\t\tpadding 1em 2em\n\t\tborder-radius 3em\n\t\tfont-style normal\n\t\tfont-weight lighter\n\t\twidth auto\n\t\ttext-decoration none\n\t&:hover\n\t\topacity .8\n\t\tcursor pointer\n\t\n\t&.button-mapadaqui\n\t\ta\n\t\t\tbackground-color #ED4D51\n\t&.button-musicmeet\n\t\ta\n\t\t\tbackground-color #ED217C\n\t&.button-feito\n\t\ta\n\t\t\tbackground-color #373535\n\t\t\t\n\n.plus-button\n\t//font-weight bold\n\talign horizontal \n\ttext-align center\n\tcolor black\n\twidth auto\t\n\theight 2em\n\tborder-bottom 1px solid black\n\t-webkit-transition all .3s\n\ttransition: all .3s \n\t&::hover\n\t\tcursor pointer \n\t\t\n.social\n\tcol(12/12)\n\tmargin-top 3em\n\tmargin-bottom 3em\n\tp \n\t\tmargin-top 2em\n\t\tfont-size .8em\n\t\tline-height 1.8em\n\t\n.social--button\n\tdisplay inline-block\n\twidth 3em\n\theight 3em\n\tborder-radius 50%\n\tbackground-color #6C6C6C\n\ttransition box-shadow .3s\n\tbackground-size 45% !important\n\tbackground-position 50% 50%\n\tmargin-right .5em\n\tmargin-top 1em\n\t&:hover\n\t\tcursor pointer\n\n#dribbble\n\tbackground social-grey url('../img/social-dribbble.png') no-repeat\n\tbackground-position 50% 50%\n#dribbble:hover\n\tbackground-color dribbble\n\t// -webkit-box-shadow: 0px 0px 25px 0px dribbble\n\t// -moz-box-shadow:    0px 0px 25px 0px dribbble\n\t// box-shadow:         0px 0px 25px 0px dribbble\n\n#linkedin\n\tbackground social-grey url('../img/social-linkedin.png') no-repeat\n\tbackground-position 50% 50%\n#linkedin:hover\n\tbackground-color linkedin\n\t// -webkit-box-shadow: 0px 0px 25px 0px linkedin\n\t// -moz-box-shadow:    0px 0px 25px 0px linkedin\n\t// box-shadow:         0px 0px 25px 0px linkedin\n\n#twitter\t\n\tbackground social-grey url('../img/social-twitter.png') no-repeat\n\tbackground-position 50% 50%\n#twitter:hover\n\tbackground-color twitter\n\t// -webkit-box-shadow: 0px 0px 25px 0px twitter\n\t// -moz-box-shadow:    0px 0px 25px 0px twitter\n\t// box-shadow:         0px 0px 25px 0px twitter\n\n#behance\n\tbackground social-grey url('../img/social-behance.png') no-repeat\n\tbackground-position 50% 50%\n#behance:hover\n\tbackground-color behance\n\t// -webkit-box-shadow: 0px 0px 25px 0px behance\n\t// -moz-box-shadow:    0px 0px 25px 0px behance\n\t// box-shadow:         0px 0px 25px 0px behance\n\t\n#email\n\tbackground social-grey url('../img/social-email.png') no-repeat\n\tbackground-position 50% 50%\n#email:hover\n\tbackground-color email\n\t// -webkit-box-shadow: 0px 0px 25px 0px email\n\t// -moz-box-shadow:    0px 0px 25px 0px email\n\t// box-shadow:         0px 0px 25px 0px email\t\n\t\n\t\n.gallery\n\tmargin-top 3em\n.menu-tags\n\tmargin-top 1em\n\tmargin-bottom 3em\n\ttransition: all 0.3s ease-in;\n\t-moz-transition: all 0.3s ease-in;\n\t-ms-transition: all 0.3s ease-in;\n\t-o-transition: all 0.3s ease-in;\n\t-webkit-transition: all 0.3s ease-in;\n\t.menu-tag\n\t\tfont-size .8em\n\t\tcolor white\n\t\tbackground-color black\n\t\topacity .2\n\t\tpadding .5em 1.5em\n\t\tmargin .2em\n\t\tdisplay inline-block\n\t\tborder-radius 2em\n\t\t+below(40em)\n\t\t\tdisplay none\n\t.tag__grey\n\t\topacity .2\n\t.tag__black\n\t\topacity 1\n\t.menu-tag:hover\n\t\topacity 1\n\t\tcursor pointer !important\n\n.old-project\n\twidth 25%\n\tpadding-bottom 25%\n\tfloat left\n\twebkit-transition all 0.3s\n\ttransition: all 0.3s ease-in;\n\t-moz-transition: all 0.3s ease-in;\n\t-ms-transition: all 0.3s ease-in;\n\t-o-transition: all 0.3s ease-in;\n\t-webkit-transition: all 0.3s ease-in;\n\tcursor pointer !important\n\tfont-style normal\n\tfont-weight lighter\n\tbackground-size cover\n\tbackground-position 50% 50%\n\tposition:relative\n\t.content-wrapper\n\t\tposition absolute\n\t\tcolor white\n\t\tbackground-color rgba(0,0,0,.8)\n\t\tleft 0\n\t\tright 0\n\t\theight 100%\n\t\t.content\n\t\t\twidth 75%\n\t\t\talign (both)\n\t\t\tfont-size .8em\n\t\t\tline-height 1.5em\n\t+below(60em)\t\n\t\twidth 33%\n\t\tpadding-bottom 33%\n\t+below(40em)\n\t\twidth 50%\n\t\tpadding-bottom 50%\n\t+below(25em)\n\t\twidth 100%\n\t\tpadding-bottom 100%\t\n.tag\n\tfont-size .8em\n\tpadding .5em 1.5em\n\tmargin-top 2em\n\tmargin-right .2em\n\tmargin-left .2em\n\tdisplay inline-block\n\tborder-radius 2em\n\tbackground-color rgba(0,0,0,.1)\n\n\t\t\n.old-project:hover\n\tz-index 1\n\t-webkit-box-shadow: 0em 0px 1em 0em rgba(0,0,0,.3)\n\t-moz-box-shadow:    0em 0px 1em 0em rgba(0,0,0,.3)\n\tbox-shadow:         0em 0px 1em 0em rgba(0,0,0,.3)\n.content-wrapper\n\tbackground-size cover !important\n\tbackground-position 50% 50% !important\n\n#reboo\n\tbackground-image url('../img/website-hero-reboo.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-reboo__hover.png')\n#bossy\n\tbackground-image url('../img/website-hero-bossy.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-bossy__hover.png')\n#eletropaulo\n\tbackground-image url('../img/website-hero-eletropaulo.png')\n\t.content-wrapper\n\t\tcolor black\n\t\tbackground url('../img/website-hero-eletropaulo__hover.png')\n#lapso\n\tbackground-image url('../img/website-hero-lapso.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-lapso__hover.png')\n#minhocao\n\tbackground-image url('../img/website-hero-minhocao.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-minhocao__hover.png')\n#bookcrossing\n\tbackground-image url('../img/website-hero-bookcrossing.png')\n\t.content-wrapper\n\t\tcolor black\n\t\tbackground url('../img/website-hero-bookcrossing__hover.png')\n#festool\n\tbackground-image url('../img/website-hero-festool.png')\n\t.content-wrapper\n\t\tcolor black\n\t\tbackground url('../img/website-hero-festool__hover.png')\n\n#mapadaqui\n\tbackground-image url('../img/website-hero-mapadaqui.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-mapadaqui__hover.png')\n#musicmeet\n\tbackground-image url('../img/website-hero-musicmeet.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-musicmeet__hover.png')\n#feito\n\tbackground-image url('../img/website-hero-feito.png')\n\t.content-wrapper\n\t\tcolor black\n\t\tbackground url('../img/website-hero-feito__hover.png')\n#mobi\n\tbackground-image url('../img/website-hero-mobi.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-mobi__hover.png')\n#trolley\n\tbackground-image url('../img/website-hero-trolley.png')\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-trolley__hover.png')\n#taxi\n\tbackground-image url('../img/website-hero-taxi.png')\t\n\t.content-wrapper\n\t\tcolor white\n\t\tbackground url('../img/website-hero-taxi__hover.png')\n\t\t\n//PROJECTS\n.project-header\n\tspan(12/12)\n\tposition absolute\n\ttop 0px\n\theight 30em\n\tmargin-bottom 3em\n\tbackground-size cover !important\n\tbackground-repeat no-repeat !important\n\tbackground-position 50% 50% !important\n\t+below(60em)\n\t\theight:20em\n\t\n.project-content\n\tmargin-top 33em\n\t\n\tp\n\t\tcenter(40em)\n\t\ttext-align left\n\t\tmargin-top 3em \n\t\t//padding 0em 3em\n\th1\n\t\t//center(600px)\n\t\t//padding 0em 3em\n\t\t//margin-top 3em\n\t\tline-height 1.8em\n\timg\n\t\tmargin-top 3em\n\t\tcenter(50em)\n\t\twidth 50em\n\t\t+below(50em)\n\t\t\twidth 100%\n\t.img-full \n\t\tmargin-top 5em\t\n\t\t//margin-top 1em\n\t\tcenter(100%)\n\t\tcolor white\n\t\t&.no-margin\n\t\t\tmargin-top 0\n\t\t&.reboo-blue\n\t\t\tbackground-color #2C2E34\n\t\t&.reboo-lightblue\n\t\t\tbackground-color #4B565E\n\t+below(60em)\n\t\tmargin-top 23em\n\t\tp\n\t\t\tcenter(80%)\n.favicon\n\tcenter(both)\n\tbackground-color black\n\ttext-decoration none\n\tcolor white\n\twidth 3em\n\theight 3em\t\n\tborder-radius 2em\n\tline-height 3em\n\tmargin-top 2em\n\topacity .5\n\t// +below(600px)\n\t// \tposition fixed\n\t// \ttop -10px\n\t// \tleft 20px\n.favicon:hover\n\topacity 1\n\tcursor pointer\n\n.credits, .quote\n\tbackground-color #f3f3f3\n\tmargin-top 3em\n\tpadding 3em 0em\n\tcenter(50em)\n\tp\t\n\t\ttext-align center\n\t\tmargin: 0em 3em\n\t\tmax-width: 100%\n\t\t// font-size .8em\n\t\t// font-style italic\n.quote\n\tp\n\t\ttext-align center\n\t\tmargin: 0em 3em\n\t\tmax-width: 100%\n\t.person\n\t\tfont-size .8em\n\t\tmargin-top 2em\n\t\tfont-weight bold\n.issuuembed\n\tmargin-top 2em\n\tcenter(50em)\n\t+below(50em)\n\t\tcenter(80%)\n\n.project-header.header-eletropaulo\n\tbackground url('../img/eletropaulo/eletropaulo-cover.png')\n#eletropaulo-green\n\tbackground-color #8DC641\n\n.project-header.header-minhocao\n\tbackground url('../img/minhocao/minhocao-cover.png')\t\n\n.project-header.header-festool\n\tbackground url('../img/festool/festool-cover.png')\n\n.project-header.header-bookcrossing\n\tbackground url('../img/bookcrossing/bookcrossing-cover.png')\n\n.project-header.header-lapso\n\tbackground url('../img/lapso/lapso-cover.jpg')\n\n.project-header.header-trolley\n\tbackground url('../img/trolley/trolley-cover.jpg')\n\t\n.project-header.header-bossy\n\tbackground url('../img/bossy/bossy-cover.jpg')\n.project-header.header-mapadaqui\n\tbackground url('../img/mapadaqui/mapadaqui-cover.jpeg')\n#mapadaqui-blue\n\tbackground-color #9CD1CB\n.project-header.header-cabsp\n\tbackground url('../img/cabsp/cabsp-cover.jpg')\n.project-header.header-citymapper\n\tbackground url('../img/citymapper-cover.png')\n.project-header.header-mobi\n\tbackground url('../img/mobi/mobi-cover.jpg')\n.project-header.header-musicmeet\n\tbackground url('../img/musicmeet/musicmeet-cover.png')\n.project-header.header-feito\n\tbackground url('../img/feito/feito-cover.png')\n.project-header.header-reboo\n\tbackground url('../img/reboo/reboo-cover.png')\na:hover\n\tcursor pointer !important\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","/**\n * Style an element as a column with a gutter.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [offset=0] - A offset specified as a fraction (see ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn(ratios = 1, offset = 0, cycle = 0, uncycle = 0, gutter = jeet.gutter)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n  column-widths = jeet-get-column(ratios, gutter)\n  margin-last = 0\n  margin-l = margin-last\n  margin-r = column-widths[1]\n\n  unless offset == 0\n    if offset < 0\n      offset *= -1\n      offset = jeet-get-column(offset, column-widths[1])[0]\n      margin-r = margin-last = offset + column-widths[1] * 2\n    else\n      offset = jeet-get-column(offset, column-widths[1])[0]\n      margin-l = offset + column-widths[1]\n\n  cf()\n  float: side\n  clear: none\n  text-align: inherit\n  width: (column-widths[0])%\n  margin-{side}: (margin-l)%\n  margin-{opposite-side}: (margin-r)%\n\n  if uncycle != 0\n    &:nth-child({uncycle}n)\n      margin-{opposite-side}: (margin-r)%\n      float: side\n    &:nth-child({uncycle}n+1)\n      clear: none\n\n  if cycle != 0\n    &:nth-child({cycle}n)\n      margin-{opposite-side}: (margin-last)%\n      float: opposite-side\n    &:nth-child({cycle}n+1)\n      clear: both\n   else\n    &:last-child\n      margin-{opposite-side}: (margin-last)%\n\n/**\n * An alias for the column mixin.\n */\ncol = column\n\n/**\n * Get the width of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn-width(ratios = 1, gutter = jeet.gutter)\n  return jeet-get-column(ratios, gutter)[0] + '%'\n\n/**\n * An alias for the column-width function.\n */\ncw = column-width\n\n/**\n * Get the gutter size of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\ncolumn-gutter(ratios = 1, gutter = jeet.gutter)\n  return jeet-get-column(ratios, gutter)[1] + '%'\n\n/**\n * An alias for the column-gutter function.\n */\ncg = column-gutter\n\n/**\n * Style an element as a column without any gutters for a seamless row.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [offset=0] - A offset specified as a fraction (see ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n */\nspan(ratio = 1, offset = 0, cycle = 0, uncycle = 0)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n  span-width = jeet-get-span(ratio)\n  margin-r = 0\n  margin-l = margin-r\n\n  unless offset == 0\n    if offset < 0\n      offset *= -1\n      margin-r = jeet-get-span(offset)\n    else\n      margin-l = jeet-get-span(offset)\n\n  cf()\n  float: side\n  clear: none\n  text-align: inherit\n  width: (span-width)%\n  margin-{side}: (margin-l)%\n  margin-{opposite-side}: (margin-r)%\n\n  if cycle != 0\n    &:nth-child({cycle}n)\n      float: opposite-side\n    &:nth-child({cycle}n + 1)\n      clear: both\n\n  if uncycle != 0\n    &:nth-child({uncycle}n)\n      float: side\n    &:nth-child({uncycle}n + 1)\n      clear: none\n\n/**\n * Reorder columns without altering the HTML.\n * @param {number} [ratios=0] - Specify how far along you want the element to move.\n * @param {string} [col-or-span=column] - Specify whether the element has a gutter or not.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\nshift(ratios = 0, col-or-span = column, gutter = jeet.gutter)\n  translate = ''\n  side = jeet-get-layout-direction()\n\n  if side == right\n    ratios = jeet-replace-nth(ratios, 0, ratios[0] * -1)\n\n  if col-or-span == column or col-or-span == col or col-or-span == c\n    column-widths = jeet-get-column(ratios, gutter)\n    translate = column-widths[0] + column-widths[1]\n  else\n    translate = jeet-get-span(ratios)\n\n  position: relative\n  left: (translate)%\n\n/**\n * Reset an element that has had shift() applied to it.\n */\nunshift()\n  position: static\n  left: 0\n\n/**\n * View the grid and its layers for easy debugging.\n * @param {string} [color=black] - The background tint applied.\n * @param {boolean} [important=false] - Whether to apply the style as !important.\n */\nedit(color = black, important = false)\n  if important\n    *\n      background: rgba(color, 5%) !important\n  else\n    *\n      background: rgba(color, 5%)\n\n/**\n *  Alias for edit().\n */\ndebug = edit\n\n/**\n * Horizontally center an element.\n * @param {number} [max-width=jeet.max-width] - The max width the element can be.\n * @param {number} [pad=0] - Specify the element's left and right padding.\n */\ncenter(max-width = jeet.max-width, pad = 0)\n  cf()\n  width: auto\n  max-width: max-width\n  float: none\n  display: unquote('block')\n  margin-right: auto\n  margin-left: auto\n  padding-left: pad\n  padding-right: pad\n\n/**\n * Uncenter an element.\n */\nuncenter()\n  max-width: none\n  margin-right: 0\n  margin-left: 0\n  padding-left: 0\n  padding-right: 0\n\n/**\n * Stack an element so that nothing is either side of it.\n * @param {number} [pad=0] - Specify the element's left and right padding.\n * @param {bollean/string} [align=false] - Specify the text align for the element.\n */\nstack(pad = 0, align = false)\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n\n  display: unquote('block')\n  clear: both\n  float: none\n  width: 100%\n  margin-left: auto\n  margin-right: auto\n\n  &:first-child\n    margin-{side}: auto\n\n  &:last-child\n    margin-{opposite-side}: auto\n\n  if pad != 0\n    padding-left: pad\n    padding-right: pad\n\n  if (align is not false)\n    if (align == center) or (align == c)\n      text-align: center\n    if (align == left) or (align == l)\n      text-align: left\n    if (align == right) or (align == r)\n      text-align: right\n\n/**\n * Unstack an element.\n */\nunstack()\n  side = jeet-get-layout-direction()\n  opposite-side = opposite-position(side)\n\n  text-align: side\n  display: inline\n  clear: none\n  width: auto\n  margin-left: 0\n  margin-right: 0\n\n  &:first-child\n    margin-{side}: 0\n\n  &:last-child\n    margin-{opposite-side}: 0\n\n/**\n * Center an element on either or both axes.\n * @requires A parent container with relative positioning.\n * @param {string} [direction=both] - Specify which axes to center the element on.\n */\nalign(direction = both)\n  position: absolute\n  transform-style: preserve-3d\n\n  if (direction == horizontal) or (direction == h)\n    left: 50%\n    transform: translateX(-50%)\n  else if (direction == vertical) or (direction == v)\n    top: 50%\n    transform: translateY(-50%)\n  else\n    top: 50%\n    left: 50%\n    transform: translate(-50%, -50%)\n\n/**\n * Apply a clearfix to an element.\n */\ncf()\n  *zoom: 1\n\n  &:before, &:after\n    content: ''\n    display: table\n\n  &:after\n    clear: both\n","// ---------\n// Utilities\n// ---------\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alias: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopen-type-ligatures()\n  font-feature-settings: \"liga\", \"dlig\"\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle($direction = 'up', $size = 10px, $color = #000)\n  width: 0\n  height: 0\n  if $direction == 'up'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-bottom: $size solid $color\n  else if $direction == 'down'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-top: $size solid $color\n  else if $direction == 'left'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-right: $size solid $color\n  else if $direction == 'right'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-left: $size solid $color\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(n+{$count})\n  & > {$selector}:nth-last-child(n+{$count}) ~ {$selector}\n    {block}\n\nquantity-at-most($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(-n+{$count}):first-child\n  & > {$selector}:nth-last-child(-n+{$count}):first-child ~ {$selector}\n    {block}\n\nquantity-between($start = 0, $end = 10, $selector = li)\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child ~ {$selector}\n    {block}\n\nquantity-exactly($count = 4, $selector = li)\n  & > {$selector}:nth-last-child({$count}):first-child\n  & > {$selector}:nth-last-child({$count}):first-child ~ {$selector}\n    {block}\n\n// Function: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\nrem($value)\n  $base-font-size ?= 16px\n  $type = unit($value)\n  if $type == px\n    return unit($value / $base-font-size, 'rem')\n  else\n    return unit($value, $type)\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\n$ease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\n$ease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\n$ease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\n$ease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\n$ease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\n$ease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\n$ease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\n$ease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\n$ease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\n$ease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\n$ease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\n$ease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\n$ease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\n$ease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\n$ease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\n$ease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\n$ease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\n$ease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\n$ease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\n$ease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\n$ease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\n$ease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\n$ease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\n$ease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\n$ease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\n$ease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\n$ease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n"]}